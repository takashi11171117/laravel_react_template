import path from 'path'
import { loadConfigFromFile, mergeConfig } from 'vite'
import macrosPlugin from 'vite-plugin-babel-macros'
import react from '@vitejs/plugin-react'
import tsconfigPaths from 'vite-tsconfig-paths'

const configEnvServe = {
  mode: 'development',
  command: 'serve',
  ssrBuild: false,
}

const configEnvBuild = {
  mode: 'production',
  command: 'build',
  ssrBuild: false,
}

const config = {
  framework: {
    name: '@storybook/react-vite',
    options: {},
  },
  stories: [
    '../resources/ts/**/*.stories.mdx',
    '../resources/ts/**/*.stories.@(js|jsx|ts|tsx)',
  ],
  addons: [
    '@storybook/addon-links',
    '@storybook/addon-essentials',
    '@storybook/addon-interactions',
  ],
  core: {
    disableTelemetry: true,
  },
  async viteFinal(config, { configType }) {
    const isProduction = configType === 'PRODUCTION'
    const { config: userConfig } = await loadConfigFromFile(
      isProduction ? configEnvBuild : configEnvServe,
      path.resolve(__dirname, '../vite.config.js'),
    )

    return mergeConfig(config, {
      ...userConfig,
      plugins: [
        react({
          jsxImportSource: '@emotion/react',
        }),
        macrosPlugin(),
        tsconfigPaths(),
      ],
      build: {
        ...config.build,
        sourcemap: !isProduction,
      },
    })
  },
}

export default config
